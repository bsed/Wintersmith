<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Блог про Фреймер</title>
    <atom:link href="http://localhost:8080/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://localhost:8080</link>
    <description>Блог о прототипировании интерактивных продуктов</description>
    <pubDate>Fri, 11 Mar 2016 11:00:00 +0300</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Импорт макета из Sketch во Framer</title>
      <link>http://localhost:8080/articles/sketch-tips/</link>
      <pubDate>Fri, 11 Mar 2016 11:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/sketch-tips/</guid>
      <author></author>
      <description>&lt;p&gt;Код — инструмент без ограничений. Но есть задачи, решать которые через программирование не самый легкий и, главное, не самый эффективный путь. Грамотная организация импорта из Скетча во Фреймер позволит этим инструментам дополнять друг друга: как можно раньше проверять гипотезы в интерактиве, вносить изменения в макет и моментально применять их к прототипу.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/sketch-tips/sketch.png&quot; alt=&quot;Framer + Sketch&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Фишки импорта во Фреймере:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Все слои переносятся из Скетча в один клик. Фреймер сам расставляет их на холсте, поэтому «версткой» прототипа заниматься не придется.&lt;/li&gt;
&lt;li&gt;Работает с макетами, нарисованными в @1x. Позволяет масштабировать их в 1.5x, 2x, 3x и 4x.&lt;/li&gt;
&lt;li&gt;Умеет импортировать вектор.&lt;/li&gt;
&lt;li&gt;Понимает артборды, маски, некоторые свойства обычных слоев.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;-&quot;&gt;Как устроен импорт слоев&lt;/h2&gt;
&lt;p&gt;Слоем во Фреймере станет каждая группа или символ из Скетча. Если внутри группы есть другая группа, то во Фреймере она станет вложенным слоем. Обычные слои внутри папки (как фигуры, так и текст) сольются в одну картинку и станут фоновым изображением своей папки. Слои, которые не попали ни в одну папку, станут фоновым изображением артборда.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/sketch-tips/02-layers.png&quot; alt=&quot;Layers&quot;&gt;
&lt;small&gt;Слои Show More Copy, NEARBY и Rectangle 1119 станут фоном слоя nearby&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;После импорта к слоям можно обращаться по их именам с приставкой &lt;code&gt;sketch.&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Правильно (sketch.слой.свойство):&lt;/span&gt;
sketch.nearby.opacity = &lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;
sketch.Parking_Copy.draggable = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;# Неправильно (вложенность не нужна):&lt;/span&gt;
sketch.nearby.Parking_Copy.opacity = &lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;iframe&quot;&gt;
    &lt;img class=&quot;ratio&quot;&gt;
    &lt;iframe
        src=&quot;https://player.vimeo.com/video/158629547?autoplay=1&amp;loop=1&amp;title=0&amp;byline=0&amp;portrait=0&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
    &lt;/iframe&gt;
&lt;/div&gt;


&lt;p&gt;Скрытые группы тоже импортируются, но с параметром &lt;code&gt;visible: false&lt;/code&gt;. По умолчанию, они невидимы и во Фреймере, но в любой момент их можно включить через строку кода:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;sketch.layerName.visible = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;-&quot;&gt;Как правильно называть группы и символы&lt;/h4&gt;
&lt;p&gt;Здесь действую правила именования переменных в JavaScript: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Все пробелы в имени будут заменены на «_». &lt;/li&gt;
&lt;li&gt;Цифры можно использовать, но не первым символом в названии. Если хотя бы у одного слоя имя будет начинаться с числа, то импорт не состоится.&lt;/li&gt;
&lt;li&gt;Нельзя использовать знаки пунктуации, кроме символов «$» и «_». Фреймер позволит импортировать слой с любым именем, но ошибки появятся при попытке вызовать неправильное имя. Либо можно забить и обращаться к слоям таким образом:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;sketch[&lt;span class=&quot;string&quot;&gt;&quot;flat.design&quot;&lt;/span&gt;].opacity = &lt;span class=&quot;number&quot;&gt;0.25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&quot;-&quot;&gt;Пять практических советов&lt;/h2&gt;
&lt;h4 id=&quot;1-&quot;&gt;1. Используйте маску в Скетче, чтобы создать скрол во Фреймере&lt;/h4&gt;
&lt;p&gt;Любая маска импортируется как обычный слой с параметром &lt;code&gt;clip: true&lt;/code&gt; («не показывать содержимое за пределами слоя»). Одной строкой кода можно преобразовать маску из обычного объекта &lt;code&gt;Layer&lt;/code&gt; в &lt;code&gt;ScrollComponent&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;scroll = ScrollComponent.wrap(sketch.feed)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;iframe&quot;&gt;
    &lt;img class=&quot;ratio&quot;&gt;
    &lt;iframe
        src=&quot;https://player.vimeo.com/video/158648874?autoplay=1&amp;loop=1&amp;title=0&amp;byline=0&amp;portrait=0&quot; 
        frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;h4 id=&quot;2-pdf&quot;&gt;2. Импортируйте векторную через PDF&lt;/h4&gt;
&lt;p&gt;Про
layer*&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/sketch-tips/vector.png&quot; alt=&quot;Vector in PDF&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;sketch[&lt;span class=&quot;string&quot;&gt;&quot;layer.pdf&quot;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&quot;3-&quot;&gt;3. Растрируйте ненужные группы и символы&lt;/h4&gt;
&lt;p&gt;Просто &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/sketch-tips/flattening.png&quot; alt=&quot;Flattening&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&quot;4-&quot;&gt;4. Работайте со слоями как с массивами&lt;/h4&gt;
&lt;p&gt;Одно из преимущество кода — автоматизация. Вы можете применять однотипные события и анимации ко всем слоям внутри конкретной папки. Либо обращаться к ним по порядковому номеру.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;array = [&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;]

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;]
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; array[i]

&lt;span class=&quot;comment&quot;&gt;# &quot;A&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &quot;B&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &quot;C&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/articles/sketch-tips/children.png&quot; alt=&quot;Layer Children&quot;&gt;
&lt;small&gt;↑ Мы присвоили перменной layer все 8 дочерних слоев megagroup. Затем двумя строками кода выводим все их имена в консоль и меняем разом прозрачность&lt;/small&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.7&lt;/span&gt;]
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; sketch.megagroup.children[index]

&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 3  name:battery          (-640,  90)   28 x 28&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 4  name:Group_3          (-468,  50)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 5  name:text             (-468,  50)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 6  name:Group_2          (-688,   0)  158 x 112&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 7  name:Group            (-512, 100)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 8  name:Group_Copy1      (-512, 100)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 9  name:Group_Copy1_Copy (-512, 100)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id:10  name:dots             (-640,  90)   28 x 28&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Также CoffeeScript поддерживет особую форму циклов специально для массивов (в этом случае цикл сам посчитает, сколько раз ему нужно повториться):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; layerX &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sketch.megagroup.children
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; layerX

&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 3  name:battery          (-640,  90)   28 x 28&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 4  name:Group_3          (-468,  50)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 5  name:text             (-468,  50)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 6  name:Group_2          (-688,   0)  158 x 112&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 7  name:Group            (-512, 100)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 8  name:Group_Copy1      (-512, 100)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id: 9  name:Group_Copy1_Copy (-512, 100)  154 x 70&amp;gt;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# &amp;lt;Layer id:10  name:dots             (-640,  90)   28 x 28&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если нам все же необходимо знать номер индекса, мы можем написать так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; layerX, index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sketch.megagroup.children
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; index, layerX.name

&lt;span class=&quot;comment&quot;&gt;# 0, &quot;battery&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 1, &quot;Group_3&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 2, &quot;text&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 3, &quot;Group_2&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 4, &quot;Group&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 5, &quot;Group_Copy1&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 6, &quot;Group_Copy1_Copy&quot;&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# 7, &quot;dots&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h4 id=&quot;5-&quot;&gt;5. Работайте с относительными значениями&lt;/h4&gt;
&lt;p&gt;Еще одно из преимуществ программирования — вычисления. Чтобы сделать ваш прототип более устойчивым к изменениям размеров и координат разных слоев, прописывайте все величины не числами, а процентами размеров экрана. Например, вместо этого:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;sketch.layer.x     = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;
sketch.layer.width = &lt;span class=&quot;number&quot;&gt;650&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;…пишите лучше так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;sketch.header.maxX  = Screen.width
sketch.header.width = Screen.width - &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Теперь, если изменится размер экрана или вы измените ширину слоя, то при обновлении импорта все значения пересчитаютяс автоматически.&lt;/p&gt;
&lt;p&gt;Чтобы выравить объект по центру экрана можно писать так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;sketch.header.midX = Screen.width  / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
sketch.header.midY = Screen.height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Бесплатный Framer.js на Windows и OS X</title>
      <link>http://localhost:8080/articles/on-windows-and-mac-for-free/</link>
      <pubDate>Fri, 04 Mar 2016 09:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/on-windows-and-mac-for-free/</guid>
      <author></author>
      <description>&lt;p&gt;Framer.js и Framer Studio — разные вещи. Framer.js — это бесплатная JavaScript-библиотека, которой можно пользоваться в любом редакторе кода; Framer Studio — платное приложение. Я расскажу, как с помощью редактора Atom пользоваться Фреймером бесплатно на Windows и OS X.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/framerjs-in-atom.png&quot; alt=&quot;Framer.js в редакторе кода Atom&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Эта статья — дополненный перевод статьи Кенни Чена &lt;a href=&quot;http://www.prototypingwithframer.com/framer-on-windows-with-atom/&quot;&gt;Using Framer on Windows with Atom&lt;/a&gt; из его блога Prototyping with Framer&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Прототип во Фреймере — это обычный сайт, который выглядит как папка с файлами (шаблон проекта можно скачать &lt;a href=&quot;https://github.com/koenbok/Framer#get-started&quot;&gt;в репозитории Фреймера&lt;/a&gt; на Гитхабе:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index.html&lt;/strong&gt; запускается для просмотра прототипа. Он уже правильно настроен для любого проекта. Его придется менять, если вы хотите обновить ссылку на новую версию библиотеки Framer.js, либо добавляете в проект другие JavaScript-библиотеки (&lt;a href=&quot;http://d3js.org&quot;&gt;D3.js&lt;/a&gt;, &lt;a href=&quot;http://hammerjs.github.io&quot;&gt;Hammer.js&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;app.coffee&lt;/strong&gt; — главный файл проекта. Здесь мы пишем весь код на языке CoffeeScript. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;app.js&lt;/strong&gt; — скомпилированный код прототипа, который будет работать в браузере. Он получается автоматически из файла app.coffee.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/framer&lt;/strong&gt; — папка с самой библиотекой (ее можно удалить, т. к. в репозитории хранится очень старый шаблон).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;/images&lt;/strong&gt; — папка с нарезкой нашего макета, шрифтами и прочими файлами. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/project.png&quot; alt=&quot;Framer New Project&quot;&gt;
&lt;small&gt;Типичный проект во Фреймере&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Все эти операции: создание нового проекта, конвертация CoffeeScript, моментальный предпросмотр прототипа — делает Framer Studio. Нам же придется организовать их самостоятельно. &lt;/p&gt;
&lt;h2 id=&quot;1-&quot;&gt;1. Установка Атома&lt;/h2&gt;
&lt;p&gt;Атом — редактор кода от разработчиков Гитхаба. Его стоит выбрать за удобный интерфейс установки плагинов, в котором ненужно лезть в командную строку и учить команды наизусть. Скачать здесь:&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;h3&gt;&lt;a href=&quot;https://atom.io&quot;&gt;atom.io&lt;/a&gt;&lt;/h2&gt;&lt;/center&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;После установки мы видим экран приветствия:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/01-welcome.png&quot; alt=&quot;Welcome to Atom&quot;&gt;&lt;/p&gt;
&lt;p&gt;Нужно выбрать Install a Package › Open Installer и попадаем сюда:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/02-install.png&quot; alt=&quot;Installer&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-coffee-compile-html-preview&quot;&gt;2. Установка Coffee-Compile и HTML-Preview&lt;/h2&gt;
&lt;p&gt;Вбиваем в поиске coffee compile и html preview. Устанавливаем их:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/03-coffee-compile.png&quot; alt=&quot;Coffee-Compile&quot;&gt;
&lt;img src=&quot;/articles/on-windows-and-mac-for-free/04-html-preview.png&quot; alt=&quot;HTML-Preview&quot;&gt;&lt;/p&gt;
&lt;p&gt;Теперь нужно правильно настроить плагины:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;в настройках Coffee-Compile включить &lt;strong&gt;Compile on save without preview&lt;/strong&gt;. Наш код будет конвертироваться в JavaScript по каждому нажатию &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;S&lt;/kbd&gt; на Винде (и &lt;kbd&gt;Cmd&lt;/kbd&gt;&lt;kbd&gt;S&lt;/kbd&gt; на Маке). &lt;/li&gt;
&lt;li&gt;в настройках HTML-Preview включить &lt;strong&gt;Trigger On Save&lt;/strong&gt;. Как только изменится файл с JavaScript, превью моментально отобразит все изменения.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/05-coffee-compile-settings.png&quot; alt=&quot;Coffee-Compile Settings&quot;&gt;
&lt;img src=&quot;/articles/on-windows-and-mac-for-free/06-compile-on-save.png&quot; alt=&quot;Compile CoffeeScript on save&quot;&gt;
&lt;img src=&quot;/articles/on-windows-and-mac-for-free/07-html-preview-settings.png&quot; alt=&quot;HTML-Preview Settings&quot;&gt;
&lt;img src=&quot;/articles/on-windows-and-mac-for-free/08-preview-trigger-on-save.png&quot; alt=&quot;Trigger on save&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-&quot;&gt;3. Обвновление шаблона проекта&lt;/h2&gt;
&lt;p&gt;Каждый новый проект создается на основе шаблона. Его нужно скачать &lt;a href=&quot;https://github.com/koenbok/Framer#get-started&quot;&gt;из репозитория Фреймера&lt;/a&gt; на Гитхабе:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/09-framer-github.png&quot; alt=&quot;Framer Repository&quot;&gt;&lt;/p&gt;
&lt;p&gt;Теперь откроем папку в Атоме. Чтобы открылся весь проект, а не один его файл, не кликайте по папке два раза — просто выделите ее и нажмите кнопку Open (либо &lt;kbd&gt;Enter&lt;/kbd&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/10-open-project.png&quot; alt=&quot;Open project&quot;&gt;&lt;/p&gt;
&lt;p&gt;Если все сделано правильно, то слева в редакторе мы увидим список файлов нашего проекта. Первым делом нужно переименовать файл app.js в app.coffee:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/11-rename-app-js.png&quot; alt=&quot;Rename app.js&quot;&gt;&lt;/p&gt;
&lt;p&gt;Теперь заходим в index.html и в самом низу ищем строчку, где подключается библиотека: &lt;code&gt;&amp;lt;script src=&amp;quot;framer/framer.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/12-index-html.png&quot; alt=&quot;index.html&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Важно!&lt;/strong&gt; Обновите ссылку на библиотеку.&lt;/p&gt;
&lt;p&gt;Шаблон в репозитории не менялся больше года, поэтому по адресу “framer/framer.js” лежит старая библиотека без последних обновлений. Актуальная версия находятся на сайте &lt;a href=&quot;http://builds.framerjs.com&quot;&gt;builds.framerjs.com&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/13-builds.png&quot; alt=&quot;builds.framerjs.com&quot;&gt;
&lt;small&gt;&lt;a href=&quot;http://builds.framerjs.com&quot;&gt;builds.framerjs.com&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;Вы можете скачать файлик framer.js и положить его в папку проекта, либо просто скопировать ссылку. (Во втором случае для работы прототипа потребуется доступ в интернет.)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/14-link.png&quot; alt=&quot;New framerjs.com&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-&quot;&gt;4. Превью прототипа&lt;/h2&gt;
&lt;p&gt;Чтобы включить превью, нажимаем правой кнопкой внутри index.html и выбираем &lt;strong&gt;Preview HTML&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/15-preview.png&quot; alt=&quot;HTML Preview&quot;&gt;&lt;/p&gt;
&lt;p&gt;Теперь можно закрыть вкладку index.html (но не &lt;strong&gt;index.html Preview&lt;/strong&gt;). Попробуем написать пробный код, чтобы проверить работу окружения:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;я сохранил в папку images изображение с домашним экраном Айфона.&lt;/li&gt;
&lt;li&gt;вписал код и нажал «Сохранить».&lt;/li&gt;
&lt;li&gt;автоматически создался файл app.js (сработал Coffee-Compile) и изображение появилось на превью (сработал HTML-Preview).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/16-coding.png&quot; alt=&quot;Trying to code&quot;&gt;&lt;/p&gt;
&lt;p&gt;На картинке видно, что превью отображается экран в размере 100%. Это неудобно, т. к. высота экрана Айфона в пикселях (1440px) больше, чем высота Макбука (900px). Плюс ко всему превью растягивает прототип в пропорциях окна. &lt;/p&gt;
&lt;p&gt;Чтобы это починить, можно вписать следующий код, который необходимо удалять перед публикацией прототипа в интернет:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-CoffeeScript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Осторожно! Не копируйте этот код, а напишите сами —&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# при копировании сбиваются отступы и пробелы.&lt;/span&gt;

screen = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;750&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1334&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;clip&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;

screen.scale = Screen.height / screen.height
screen.center()
Framer.Defaults.Layer.parent = screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/articles/on-windows-and-mac-for-free/17-device.png&quot; alt=&quot;Device&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;5-&quot;&gt;5. Отправка прототипа коллегам&lt;/h2&gt;
&lt;p&gt;Одно из важнейших преимуществ Framer Studio по сравнению с редактором кода — возможность расшарить свой прототип в один клик: всем пользователям приложения предоставляется бесплатный хостинг на &lt;strong&gt;share.framerjs.com&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Если у вас есть собственный хостинг, то можете загружать свой проект через ftp. В следующих статьях мы разберем, как загружать прототипы на бесплатный хостинг &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; через приложение &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Десять видов циклов в CoffeeScript</title>
      <link>http://localhost:8080/articles/ten-loops/</link>
      <pubDate>Fri, 04 Mar 2016 09:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/ten-loops/</guid>
      <author></author>
      <description>&lt;hr&gt;
&lt;p&gt;В Фотошопе есть клевая панелька &lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;Программирование — одна фишек Фреймера&lt;/h2&gt;
&lt;p&gt;GUI-инструменты направлены &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.40&lt;/span&gt;]
  item = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer 
    &lt;span class=&quot;attribute&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;210&lt;/span&gt; * i + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;/articles/ten-loops/for-in.png&quot; alt=&quot;for…in&quot;&gt;&lt;/p&gt;
&lt;p&gt;Еще одно применение циклов — это работа с повторяющимися структурами данных. &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;data = JSON.parse Utils.domLoadDataSync &lt;span class=&quot;string&quot;&gt;&quot;data/file.json&quot;&lt;/span&gt;
users = data[&lt;span class=&quot;string&quot;&gt;&quot;users&quot;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;]
  user = users[index] 
  nameData = user.name
  roleData = user.role
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;]
  user = users[index] 
  nameData = user.name
  roleData = user.role

  layerA = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
    &lt;span class=&quot;attribute&quot;&gt;y&lt;/span&gt;: index * &lt;span class=&quot;number&quot;&gt;259&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;750&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;256&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;html&lt;/span&gt;:
      &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;h3&amp;gt;&lt;span class=&quot;subst&quot;&gt;#{nameData}&lt;/span&gt;&amp;lt;/h3&amp;gt;&quot;&lt;/span&gt; +
      &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;p&amp;gt;&lt;span class=&quot;subst&quot;&gt;#{roleData}&lt;/span&gt;&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;style&lt;/span&gt;:
      &lt;span class=&quot;attribute&quot;&gt;font&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;300 1.8em 'Helvetica Neue'&quot;&lt;/span&gt;
      &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;35px 40px&quot;&lt;/span&gt;
      &lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;#33333D&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;-&quot;&gt;Разновидности циклов во Фреймер&lt;/h2&gt;
&lt;p&gt;В большинстве языков существует три вида циклов: &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while…&lt;/code&gt; и &lt;code&gt;do… while&lt;/code&gt;, и CoffeeScript (&lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;loop&lt;/code&gt;) в том числе, но Фреймер почему-то поддерживает только &lt;code&gt;for&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Зато в 10 формах:&lt;/p&gt;
&lt;h3 id=&quot;1-&quot;&gt;1. Классика&lt;/h3&gt;
&lt;p&gt;Так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.20&lt;/span&gt;]
  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hellow world!&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;2-&quot;&gt;2. Сокращенная версия&lt;/h3&gt;
&lt;p&gt;Иногда итератор может быт не нужен, а CoffeeScript борется за лаконичность:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.20&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;3-&quot;&gt;3. Расширенная версия&lt;/h3&gt;
&lt;p&gt;С возможностью менять шаг&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.20&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;4-&quot;&gt;4. Цикл внутри массива&lt;/h3&gt;
&lt;p&gt;С возможностью менять шаг&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;names = [&lt;span class=&quot;string&quot;&gt;&quot;Anton&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Nikolay&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Yuri&quot;&lt;/span&gt;]

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; name &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; names
  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; name
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;5-&quot;&gt;5. Цикл внутри массива с параметром&lt;/h3&gt;
&lt;p&gt;С возможностью менять шаг&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;names = [&lt;span class=&quot;string&quot;&gt;&quot;Anton&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Nikolay&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Yuri&quot;&lt;/span&gt;]

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; name, i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; names
  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;#{i}&lt;/span&gt;. &lt;span class=&quot;subst&quot;&gt;#{name}&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;6-&quot;&gt;6. Цикл внутри объекта&lt;/h3&gt;
&lt;p&gt;С возможностью менять шаг&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;object = 
  &lt;span class=&quot;string&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Anton Kartashov&quot;&lt;/span&gt;
  &lt;span class=&quot;string&quot;&gt;&quot;Age&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;26&lt;/span&gt;
  &lt;span class=&quot;string&quot;&gt;&quot;City&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Moscow&quot;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key, value &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; object
  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;#{key}&lt;/span&gt; — &lt;span class=&quot;subst&quot;&gt;#{value}&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;7-&quot;&gt;7. Задом наперед&lt;/h3&gt;
&lt;p&gt;Для одного действия&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.10&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;8-&quot;&gt;8. Цикл с условием&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;eat food &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; food &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; foods &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; food &lt;span class=&quot;keyword&quot;&gt;isnt&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'chocolate'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;9-foreach-2&quot;&gt;9. forEach: Цикл по массиву №2&lt;/h3&gt;
&lt;p&gt;Для массивов есть свой метод:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&quot;one&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;two&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;three&quot;&lt;/span&gt;].forEach text -&amp;gt;
  &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; text
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;10-&quot;&gt;10. Цикл с повторением данных&lt;/h3&gt;
&lt;p&gt;Иногда хочется взять 3-5 картинов и сделать из них быстро длинный список — чтобы выглядело правдопободно, но без заморочек. Тогда можно гонять эти картинки по кругу. Чтобы понять как это делается нужно узнать операцию «остаток от деления»:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;33 / 5 = 6&lt;/code&gt;, остаток: &lt;code&gt;3&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;В любом языке программирования его можно получить одной операцией (&lt;code&gt;modulo&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;number = &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt; % &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# Теперь number == 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Например, у нас есть всего 4 картинки, мы хотим получить цикл на 50 итераций. По странному совпадению остаток от деления &lt;code&gt;i / 4&lt;/code&gt; как раз всегда будет повторяться таким образом: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0 % 4 == 0
1 % 4 == 1
2 % 4 == 2
3 % 4 == 3

4 % 4 == 0
5 % 4 == 1
6 % 4 == 2
7 % 4 == 3
…
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Применяем:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;pictures = [
  &lt;span class=&quot;string&quot;&gt;&quot;mountain.png&quot;&lt;/span&gt;
  &lt;span class=&quot;string&quot;&gt;&quot;river.png&quot;&lt;/span&gt;
  &lt;span class=&quot;string&quot;&gt;&quot;sky.png&quot;&lt;/span&gt;
  &lt;span class=&quot;string&quot;&gt;&quot;medvedev.png&quot;&lt;/span&gt;
]


&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.50&lt;/span&gt;]
  ii = i % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;
  image = pictures[ii]

  &lt;span class=&quot;comment&quot;&gt;# Либо&lt;/span&gt;
  image = pictures[i % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]

  &lt;span class=&quot;comment&quot;&gt;# Либо (если не хотим считать, сколько в массиве элементов)&lt;/span&gt;
  image = pictures[i % pictures.length]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Типс энд трикс</title>
      <link>http://localhost:8080/articles/tips-and-tricks/</link>
      <pubDate>Tue, 01 Mar 2016 03:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/tips-and-tricks/</guid>
      <author></author>
      <description>&lt;p&gt;Десять трюков, которые могут упростить работо во Фреймере.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-&quot;&gt;1. Прозрачный фон&lt;/h2&gt;
&lt;p&gt;Вместо &lt;code&gt;backgroundColor: &amp;quot;transparent&amp;quot;&lt;/code&gt; можно написать так:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;2-screen-&quot;&gt;2. Глобальный объект &lt;code&gt;Screen&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Чтобы прототип работал на любом телефоне, нужно прописывать ширину и высоту слоев не в абсолютных величинах (вроде «750 px»). Нужно выразить их через ширину и высоту экрана:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;layer A = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: Screen.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: Screen.height / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;

    &lt;span class=&quot;attribute&quot;&gt;maxY&lt;/span&gt;: Screen.height
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если размер слой заполняет весь экран, можно писать еще короче:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;layer A = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
    &lt;span class=&quot;attribute&quot;&gt;size&lt;/span&gt;: Screen.size
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;3-props-&quot;&gt;3. &lt;code&gt;props&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Если приходится менять параметры одного и того же объекта, то можно писать скоращенно:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;layerA.width = &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;
layerA.opacity = &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;
layerA.x = &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;

layerA.props =
    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;opacity&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;

layerA.draggable.props =
    &lt;span class=&quot;attribute&quot;&gt;enabled&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;horizontal&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;constraints&lt;/span&gt;:
        &lt;span class=&quot;attribute&quot;&gt;x&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Другие способы:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;at&lt;/span&gt; = &lt;span class=&quot;params&quot;&gt;(object, method)&lt;/span&gt; -&amp;gt;&lt;/span&gt; method.call object

at square, &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;property&quot;&gt;@height&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;
    &lt;span class=&quot;property&quot;&gt;@width&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;###
###&lt;/span&gt;

(&lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;property&quot;&gt;@height&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;
    &lt;span class=&quot;property&quot;&gt;@width&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;800&lt;/span&gt;
).call square
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Тоже самое, когда наоборот: много объектов, а нужно сделать с ними одно и то же:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;square = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
circle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
triangle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; layers &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [square, circle, triangle]
    layers.backgroundColor = &lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;3-frame-&quot;&gt;3. &lt;code&gt;frame&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Если приходится менять параметры одного и того же объекта, то можно писать скоращенно:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;layerA.width = &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;
layerA.opacity = &lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;
layerA.x = &lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;4-&quot;&gt;4. Замедлить все анимации в прототипе&lt;/h2&gt;
&lt;p&gt;Йо    &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;Framer.Loop.delta = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;5-&quot;&gt;5. Анонимные слои&lt;/h2&gt;
&lt;p&gt;Не обязательно давать имена бэкграундам и слоям:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-framerjs&quot;&gt;new BackgroundLayer

for i in [0..3]
    new Layer
        x: i * 120
        backgroundColor: Utils.randomColor()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;5-&quot;&gt;5. Анонимные слои&lt;/h2&gt;
&lt;p&gt;Не обязательно давать имена бэкграундам и слоям:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BackgroundLayer

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.3&lt;/span&gt;]
    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
        &lt;span class=&quot;attribute&quot;&gt;x&lt;/span&gt;: i * &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;
        &lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: Utils.randomColor()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Процесс создания Twitter Video: Обзор дизайна и прототипирования</title>
      <link>http://localhost:8080/articles/twitter-video/</link>
      <pubDate>Tue, 23 Feb 2016 03:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/twitter-video/</guid>
      <author></author>
      <description>&lt;p&gt;В середине 2011-го Твиттер выкатил собственный фотохостинг. В 2013-м фотографии стали отображаться прямо в таймлайне, а через год появились твиты с фотоколлажами и анимированными гифками. Только что мы анонсировали сервис &lt;a href=&quot;https://blog.twitter.com/2015/now-on-twitter-group-direct-messages-and-mobile-video-capture&quot;&gt;Twitter Video&lt;/a&gt;, который поможет вам делиться впечатлениями и твитить видеоролики прямо из iOS- или Android-приложения.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Журнал Wired уже сделал обзор нашей новой фичи:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://turbo.paulstamatiou.com/uploads/2015/01/DSC08761-1000.jpg&quot; alt=&quot;Twitter Video, Nexus 6&quot;&gt;
&lt;small&gt;Twitter Video, Nexus 6&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;В этой статье я приоткрою подробности работы над Twitter Video. Я не смогу показать вам бумажных эскизов или вайрфреймов, просто потому что вместо них мы использовали работающие прототипы.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;«Что можно сказать наверняка: взаимодействие внутри команды через работающий прототип — лучшая форма коммуникации».&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Вы, возможно, знакомы с моим постом «Передача смысла через анимацию», где я писал, как важно дизайнерам разбираться в моушн-дизайне и интерактивном прототипировании. Тогда я только начал использовать в своей работе Framer.js и Framer Studio и не подозревал, насколько решающую роль это сыграет в будущем.&lt;/p&gt;
&lt;p&gt;Однако JavaScript-прототипами дело не ограничилось. Ниже я расскажу, как сотрудничал с нашей командой iOS-прототипирования и пробовал разные направления в нативном коде.&lt;/p&gt;
&lt;h2 id=&quot;-twitter-video&quot;&gt;Что такое Twitter Video&lt;/h2&gt;
&lt;p&gt;Наша команда фото- и видео-сервисов относится к подразделению, отвечающему за «самовыражение пользователей». Сюда также входит команда личных &lt;em&gt;сообщений&lt;/em&gt; и команда составления твита. Усилиями этой группы улучшают опыт и инструменты, связанные с самовыражением людей.&lt;/p&gt;
&lt;h5 id=&quot;-&quot;&gt;Задача: Нашей платформе — публичной, коммуникативной, ежесекундно обновляющейся и ставшей широко распространенной — требуется нативная поддержка видео-постинга, который позволит людям запечатлевать моменты и делиться своими впечатлениями об окружающем мире.&lt;/h5&gt;
&lt;p&gt;Мы начали с 30-секундных видео — достаточно длинных, чтобы донести значимое сообщение, но не отнимающих много времени на просмотр. Мы стремились не перегружать интерфейс экстра-функционалом для продвинутых пользователей. Даже если мы позволяем делать длинные видео, не нужно, чтобы человек чувствовал, будто требуется заполнить все отведенное время. Поэтому наш выбор пал на простой интерфейс, в котором можно записывать ролик по фрагментам, но нету прогресс-баров, подстегивающих писать видео, пока не кончатся ограничения.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;«Впечатляет, что при беглом ознакомлении все возможности сервиса обнаруживаются сразу на одном экране. Еще больше впечатляет, что все операции выполняются только двумя кнопками: записать и отправить».&lt;/p&gt;
&lt;p&gt;— Wired.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Twitter, iOS
Запись видео у меня на iPhone 6+.&lt;/p&gt;
&lt;p&gt;Первым делом нам пришлось с нуля переписывать камеры для iOS и Andoid. С нативными камерами ни одной из операционных систем не удалось бы достичь такого результата. Оставалось еще две задачи: переделка интерфейса для фотосъемки и создание записи видео. Мой коллега-дизайнер Уэйн Фан занялся фото, а я начал работать над видеорежимом.&lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;Итерации&lt;/h2&gt;
&lt;p&gt;Как прототипирование изменило игру:&lt;/p&gt;
&lt;p&gt;750+
макетов в Sketch&lt;/p&gt;
&lt;p&gt;54
прототипа во Framer&lt;/p&gt;
&lt;p&gt;За все время мы перебрали множество набросков, внесли множество правок в макеты и прототипы, поэтому я покажу только основные направления. После того, как выяснилась суть проблемы и появились первые ее решения, я начал набрасывать самые разнородные варианты, какие только приходили мне в голову, а самые перспективные выбирал для проверки прототипами. Дизайн-команда Google Ventures называет подобный подход «Вникнуть в суть, нагенерить, отфильтровать, запрототипировать и испытать» (“Understand, Diverge, Decide, Prototype and Validate”).&lt;/p&gt;
&lt;p&gt;В каждой итерации по достижению удовлетворительного макета в Sketch я переключался во Framer Studio. Так я подстегивал себя как можно раньше задумываться о деталях, всплывающих только во время взаимодействия, и анимациях. Плюс это самый быстрый способ выявить непродуманные места в макете. В последних проектах все пришло к тому, что я вносил правки прямо во Framer, а Sketch остался позади в качестве отправной точки.&lt;/p&gt;
&lt;p&gt;Одна из последних итераций. Масса быстрого и мусорного кода
&lt;img src=&quot;http://turbo.paulstamatiou.com/uploads/2015/01/pstam-twtr-video-prototyping-with-framer-1000.jpg&quot; alt=&quot;Framer&quot;&gt;&lt;/p&gt;
&lt;p&gt;Все прототипы были максимально реалистичными: они поддерживали жесты, скроллинги, хранили состояния системы и т. д. Я только не стал подключать настоящую камеру (хотя есть JavaScript-библиотеки, которые позволяют работать с ней из браузера), и использовал заранее подготовленные фотки и видео.&lt;/p&gt;
&lt;p&gt;Я люблю проповедовать прототипирование, но важно различать ситуации, где оно действительно несет пользу, а где тратит время в пустую. На прототипы уходит ощутимое количество времени, т. к. в программировании нередко натыкаешься на сложности. Я садился за прототип, если у нас было очень слабое понимание того, как дизайн-решение будет ощущаться в жизни; и в тех вещах, которые я не мог основательно «рассмотреть в воображении», как сказал бы один мой закомый дизайнер. Я делал прототипы настолько детальными, насколько это требовалось, чтобы развеять все имеющиеся сомнения, но при этом старался, чтобы лишние день-два не уходили на воссоздание полного функционала.&lt;/p&gt;
&lt;p&gt;Для кого мы прототипируем? Прежде всего для себя: чтобы понять, как эта вещь будет на ощуп и опробовать концепцию в живом взаимодействии. Кроме того, в большой степени прототипы делаются для коммуникации с заказчиками. Все сырые прототипы я показываю нашему менеджеру Брендану Донохью и коллегам из дизайн-отдела, чтобы узнать их мнение и критику; плюс отправляю видео-скринкаст команде менеджеров из Twitter Video.&lt;/p&gt;
&lt;p&gt;Почему я выбрал Framer? Во-первых, мне комфортно работать с JavaScript, т. к. у меня уже был опыт с фронт-эндом. Во-вторых, мне очень не хотелось упереться в ограничения инструмента в самый разгар работы, а с HTML/CSS/JS как раз реализуем практически любой замысел.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;«Один прототип стоит тысячи встреч».&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;-1&quot;&gt;Итерация №1&lt;/h2&gt;
&lt;p&gt;Работа до этого момента была исследовательской или как мы говорим «витанием в облаках». Каждая деталь была под вопросом. Вещи, о которых мы размышляли:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;навигация,&lt;/li&gt;
&lt;li&gt;индикаторы процесса видеозаписи,&lt;/li&gt;
&lt;li&gt;как переключаться из фото- в видеосъемку,&lt;/li&gt;
&lt;li&gt;какие функции нужны для спонтанной видеозаписи, а какие для размеренной и продуманной,&lt;/li&gt;
&lt;li&gt;какие функции нужны для редактирования нескольких записанных фрагментов.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Была одна вещь, которую мы знали наперед: видео портретной ориентации — не лучший формат для просмотра. Оно слишком высокое и для таймлайна, и для экрана отдельного твита (если не прибегать к показу на весь экран по нажатию); был вариант еще хуже: уменьшить его и добавить черные поля по бокам. Нам хотелось избежать такого выбора, при этом не запрещать портретные видео в Твиттере совсем. Решили, что портретные видео, записанные нашей камерой, будут только квадратными, а видео любых других пропорций можно загрузить только из фотоальбома.&lt;/p&gt;
&lt;p&gt;Мои первые дизайны состояли из двустраничного флоу: на первой странице — запись видео и просмотр; на второй — упорядочивание и удаление фрагментов. Казалось, что логично разнести все элементы на две группы по их назначению. На странице записи была кнопка «нажмите-и-держите-для-записи» и прогресс-бар голубого цвета. На странице редактирования — блок с уже записанными видеофрагментами; у коротких был виден только первый кадр, а у фрагментов длинее 5 секунд появлялись раскадровки. Таким образом, можно было одним взглядом сравнить все фрагменты по продолжительности, даже не читая временных меток.&lt;/p&gt;
&lt;p&gt;Framer Studio
В первом прототипе я начал играться с идеей добавления быстрой отмены и возможностью таскать фрагменты: менять их местами и удалять из списка.&lt;/p&gt;
&lt;p&gt;На этом этапе я использовал временные иконки, пока наш звездный дизайнер иконок Джереми Рейз Jeremy Reiss не отрисовал их в нашем стиле.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Типографика внутри движка</title>
      <link>http://localhost:8080/articles/typography/</link>
      <pubDate>Wed, 01 Oct 2014 15:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/typography/</guid>
      <author></author>
      <description>&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;Rolled out the ability to natively tweet photos. Brought media-forward timelines with inline photos. Brought media-forward timelines with inline photos. &lt;/li&gt;
&lt;li&gt;Brought media-forward timelines with inline photos. &lt;/li&gt;
&lt;li&gt;Ushered in multi-photo tweets and animated GIF support. We’ve just.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;h2 id=&quot;twitter-video&quot;&gt;Twitter Video&lt;/h2&gt;
&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;h2 id=&quot;framer-js&quot;&gt;Framer.js&lt;/h2&gt;
&lt;h3 id=&quot;framer-js&quot;&gt;Framer.js&lt;/h3&gt;
&lt;p&gt;Syntax highlighting with &lt;a href=&quot;http://softwaremaniacs.org/soft/highlight/en/&quot;&gt;highlight.js&lt;/a&gt;.
The theme used is tomorrow, you can find more themes &lt;a href=&quot;http://jmblog.github.io/color-themes-for-highlightjs/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;twitter-video-design-and-prototyping-in-mid-2011-twitter-rolled-out-the-ability-to-natively&quot;&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively&lt;/h3&gt;
&lt;h4 id=&quot;design-and-prototyping&quot;&gt;Design and Prototyping&lt;/h4&gt;
&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;h4 id=&quot;twitter-video-design-and-prototyping-in-mid-2011-twitter-rolled-out-the-ability-to-natively&quot;&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively&lt;/h4&gt;
&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;h4 id=&quot;hello-world&quot;&gt;Hello World&lt;/h4&gt;
&lt;p&gt;Twitter Video Design and prototyping In mid-2011, Twitter rolled out the ability to natively tweet photos. 2013 brought media-forward timelines with inline photos. 2014 ushered in multi-photo tweets and animated GIF support. We’ve just announced Twitter Video to help you capture the moment and tweet video from within the iOS and Android apps.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BackgroundLayer

col1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Color(&lt;span class=&quot;string&quot;&gt;&quot;limegreen&quot;&lt;/span&gt;).desaturate(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;).lighten(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;)
col2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Color(&lt;span class=&quot;string&quot;&gt;&quot;limegreen&quot;&lt;/span&gt;)

toggle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;borderRadius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: col1
  &lt;span class=&quot;attribute&quot;&gt;midX&lt;/span&gt;: Screen.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;midY&lt;/span&gt;: Screen.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;

toggle.&lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt; Events.TouchStart, &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; container.x &amp;lt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; circle.states.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pressedLeft&quot;&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; circle.states.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pressedRight&quot;&lt;/span&gt;
  border.states.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pressed&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Базовые концепции Quartz Composer и Origami</title>
      <link>http://localhost:8080/articles/quartz-composer-and-origami/</link>
      <pubDate>Tue, 30 Apr 2013 03:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/quartz-composer-and-origami/</guid>
      <author></author>
      <description>&lt;p&gt;По Quartz Composer практически нет подробных руководств на русском языке. Ютюб полон видео-уроков, по которым можно повторить за автором его проект, но сделать свой собственный по-прежнему сложно.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&quot;iframe&quot;&gt;
    &lt;img class=&quot;ratio&quot;&gt;
    &lt;iframe 
        src=&quot;https://coub.com/embed/5gbrg?muted=false&amp;autostart=false&amp;originalSize=false&amp;hideTopBar=false&amp;startWithHD=false&quot; 
        allowfullscreen=&quot;true&quot; 
        frameborder=&quot;0&quot; &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&quot;iframe&quot;&gt;
    &lt;img class=&quot;ratio&quot;&gt;
    &lt;iframe
        src=&quot;https://www.youtube.com/embed/m-9m67mHNHU?rel=0&amp;amp;showinfo=0&quot; 
        frameborder=&quot;0&quot; 
        allowfullscreen&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&quot;iframe&quot;&gt;
    &lt;img class=&quot;ratio&quot;&gt;
    &lt;iframe src=&quot;https://player.vimeo.com/video/68749840&quot; 
        frameborder=&quot;0&quot; 
        webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;&lt;img src=&quot;https://images.unsplash.com/photo-1432256851563-20155d0b7a39?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;w=1080&amp;fit=max&amp;s=d5a324231354ac81741afa04368410f0&quot; /&gt;&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://turbo.paulstamatiou.com/uploads/2015/01/DSC08761-1000.jpg&quot; alt=&quot;&quot;&gt;
&lt;small&gt;Традиционное программирование. Javascript&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://turbo.paulstamatiou.com/uploads/2015/01/DSC08761-1000.jpg&quot; alt=&quot;Визуальное программирование. Quartz Composer&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Этот текст - обычный лорем ипсум. Сейчас пойду куда-нибудь есть в Амстере. Quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. &lt;/p&gt;
&lt;p&gt;Duis aute irure dolor in reprehenderit in voluptate velit esse
cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;links-in-the-markdown&quot;&gt;Links in the markdown&lt;/h2&gt;
&lt;p&gt;This is where I leave you to your own devices. Join &lt;strong&gt;#wintersmith&lt;/strong&gt; on freenode if you have any questions. For example a link to &lt;code&gt;../bamboo-cutter/index.md&lt;/code&gt; resolves to &lt;a href=&quot;http://localhost:8080/articles/bamboo-cutter/index.md&quot;&gt;&lt;code&gt;/articles/bamboo-cutter/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;page = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PageComponent
    &lt;span class=&quot;attribute&quot;&gt;size&lt;/span&gt;: Screen.size
    &lt;span class=&quot;attribute&quot;&gt;clip&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;scrollVertical&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;scale&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.75&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.5&lt;/span&gt;]
    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer 
        &lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: Utils.randomColor()
        &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: Screen.width, &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;
        &lt;span class=&quot;attribute&quot;&gt;y&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;160&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;borderRadius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;attribute&quot;&gt;scale&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;.95&lt;/span&gt;
        &lt;span class=&quot;attribute&quot;&gt;x&lt;/span&gt;: i * Screen.width
        &lt;span class=&quot;attribute&quot;&gt;superLayer&lt;/span&gt;: page.content

page.draggable.props =
    &lt;span class=&quot;attribute&quot;&gt;enabled&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;horizontal&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;attribute&quot;&gt;constraints&lt;/span&gt;: page.frame
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;-&quot;&gt;Патчи&lt;/h2&gt;
&lt;p&gt;Патч — базовый элемент Quartz Composer. Это аналог процедуры в традиционном программировании, он эквивалентен строке кода:&lt;/p&gt;
&lt;p&gt;Кружочки с обеих сторон патча — это порты (параметры функции). Через левые порты данные поступают в патч, через правые — выводится результат преобразования.
На примере ниже четыре патча:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fill Layer заливает фон белым цветом.&lt;/li&gt;
&lt;li&gt;Touch отслеживает нажатие на экран.&lt;ol&gt;
&lt;li&gt;Композиции&lt;/li&gt;
&lt;li&gt;Патчи&lt;/li&gt;
&lt;li&gt;Три типа патчей&lt;ul&gt;
&lt;li&gt;Fill Layer заливает фон белым цветом.&lt;/li&gt;
&lt;li&gt;Touch отслеживает нажатие на экран.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Соединения и типы данных&lt;/li&gt;
&lt;li&gt;Система координат и единицы измерения&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Button отрисовывает кнопку шириной 320 px с текстом «Sign in» и скруглениями в 24 px (эти значения можно прочитать рядом с названиями портов).&lt;/li&gt;
&lt;li&gt;Transition хранит в себе значения (Start Value, End Value), которые будут принимать Opacity и Scale кнопки по нажатию и отпусканию.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;-&quot;&gt;Содержание&lt;/h2&gt;
&lt;p&gt;Welcome to your new blog! This is the default blog template with RSS, pagination and an archive. There are other templates available – run &lt;code&gt;wintersmith new --help&lt;/code&gt; to list them.&lt;/p&gt;
&lt;h2 id=&quot;-&quot;&gt;Типы патчей&lt;/h2&gt;
&lt;p&gt;Существует три типа: приемники (consumers), &lt;em&gt;обработчики&lt;/em&gt; (processors) и &lt;strong&gt;*поставщики&lt;/strong&gt; (providers).
Изначально в Quartz Composer они различались &lt;del&gt;цветом&lt;/del&gt;: поставщики — фиолетовые, обработчики — черные, приемники — синие. Обратите внимание, патчи-поставщики чаще всего имеют порты только справа — они всегда отдают данные. Аналогично у патчей-приемников чаще всего порты только слева — они всегда принимают данные от других патчей.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;Существует три типа: приемники (consumers), &lt;em&gt;обработчики&lt;/em&gt; (processors) и &lt;strong&gt;*поставщики&lt;/strong&gt; (providers).
Изначально в Quartz Composer они различались &lt;del&gt;цветом&lt;/del&gt;: поставщики — фиолетовые, обработчики — черные, приемники — синие. Обратите внимание, патчи-поставщики чаще всего имеют порты только справа — они всегда отдают данные. Аналогично у патчей-приемников чаще всего порты только слева — они всегда принимают данные от других патчей.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/1600/1*77Fc-oAlR3LO-M5fWHw1BA.png&quot; alt=&quot;IMAGE ALT TEXT HERE&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;text-left&quot;&gt;Left aligned text.&lt;/p&gt;
&lt;p class=&quot;text-center&quot;&gt;Center aligned text.&lt;/p&gt;
&lt;p class=&quot;text-right&quot;&gt;Right aligned text.&lt;/p&gt;
&lt;p class=&quot;text-justify&quot;&gt;Justified text.&lt;/p&gt;
&lt;p class=&quot;text-nowrap&quot;&gt;No wrap text.&lt;/p&gt;

&lt;p&gt;Small
&lt;small&gt;This line of text is meant to be treated as fine print.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;You can use the mark tag to &lt;mark&gt;highlight&lt;/mark&gt; text.&lt;/p&gt;
&lt;p class=&quot;text-lowercase&quot;&gt;Lowercased text.&lt;/p&gt;
&lt;p class=&quot;text-uppercase&quot;&gt;Uppercased text.&lt;/p&gt;
&lt;p class=&quot;text-capitalize&quot;&gt;Capitalized text.&lt;/p&gt;

&lt;p&gt;&lt;abbr title=&quot;attribute&quot;&gt;attr&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;&lt;abbr title=&quot;HyperText Markup Language&quot; class=&quot;initialism&quot;&gt;HTML&lt;/abbr&gt;&lt;/p&gt;
&lt;address&gt;
  &lt;strong&gt;Twitter, Inc.&lt;/strong&gt;&lt;br&gt;
  1355 Market Street, Suite 900&lt;br&gt;
  San Francisco, CA 94103&lt;br&gt;
  &lt;abbr title=&quot;Phone&quot;&gt;P:&lt;/abbr&gt; (123) 456-7890
&lt;/address&gt;

&lt;address&gt;
  &lt;strong&gt;Full Name&lt;/strong&gt;&lt;br&gt;
  &lt;a href=&quot;mailto:#&quot;&gt;first.last@example.com&lt;/a&gt;
&lt;/address&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.&lt;/p&gt;
  &lt;footer&gt;Someone famous in &lt;cite title=&quot;Source Title&quot;&gt;Source Title&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;


&lt;dl&gt;
    &lt;dt&gt;Description lists&lt;/dt&gt;
    &lt;dd&gt;A description list is perfect for defining terms.&lt;/dd&gt;

    &lt;dt&gt;Euismod&lt;/dt&gt;
    &lt;dd&gt;Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.
Donec id elit non mi porta gravida at eget metus.&lt;/dd&gt;

    &lt;dt&gt;Malesuada porta&lt;/dt&gt;
    &lt;dd&gt;Etiam porta sem malesuada magna mollis euismod.&lt;/dd&gt;

&lt;/dl&gt;

&lt;h3 id=&quot;user-input&quot;&gt;User Input&lt;/h3&gt;
&lt;p&gt;To switch directories, type &lt;kbd&gt;cd&lt;/kbd&gt; followed by the name of the directory.&lt;br&gt;
To edit settings, press &lt;kbd&gt;&lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;,&lt;/kbd&gt;&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;&lt;samp&gt;This text is meant to be treated as sample output from a computer program.&lt;/samp&gt;&lt;/p&gt;
&lt;table class=&quot;table&quot;&gt;
  &lt;tr&gt;
      &lt;td&gt;Hello&lt;/td&gt;
      &lt;td&gt;Goodbye&lt;/td&gt;
  &lt;/tr&gt;

  &lt;tr&gt;
      &lt;td&gt;Hello&lt;/td&gt;
      &lt;td&gt;Goodbye&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
</description>
    </item>
    <item>
      <title>Code and stuff!</title>
      <link>http://localhost:8080/articles/code-and-stuff/</link>
      <pubDate>Mon, 01 Oct 2012 15:00:00 +0300</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/code-and-stuff/</guid>
      <author></author>
      <description>&lt;p&gt;Syntax highlighting with &lt;a href=&quot;http://softwaremaniacs.org/soft/highlight/en/&quot;&gt;highlight.js&lt;/a&gt;.
The theme used is tomorrow, you can find more themes &lt;a href=&quot;http://jmblog.github.io/color-themes-for-highlightjs/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;framer-js&quot;&gt;Framer.js&lt;/h2&gt;
&lt;p&gt;Syntax highlighting with &lt;a href=&quot;http://softwaremaniacs.org/soft/highlight/en/&quot;&gt;highlight.js&lt;/a&gt;.
The theme used is tomorrow, you can find more themes &lt;a href=&quot;http://jmblog.github.io/color-themes-for-highlightjs/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BackgroundLayer

col1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Color(&lt;span class=&quot;string&quot;&gt;&quot;limegreen&quot;&lt;/span&gt;).desaturate(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;).lighten(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;)
col2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Color(&lt;span class=&quot;string&quot;&gt;&quot;limegreen&quot;&lt;/span&gt;)

toggle = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Layer
  &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;borderRadius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;backgroundColor&lt;/span&gt;: col1
  &lt;span class=&quot;attribute&quot;&gt;midX&lt;/span&gt;: Screen.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;midY&lt;/span&gt;: Screen.width / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;

toggle.&lt;span class=&quot;literal&quot;&gt;on&lt;/span&gt; Events.TouchStart, &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; container.x &amp;lt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; circle.states.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pressedLeft&quot;&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; circle.states.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pressedRight&quot;&lt;/span&gt;
  border.states.&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;pressed&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;coffeescript&quot;&gt;CoffeeScript&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;lang-coffeescript&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Animal&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;comment&quot;&gt;### Intellegent design ###&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;getDNA&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'sequencing...'&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;
      sleep &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Monkey&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Animal&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;speak&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;'ah ah ah'&lt;/span&gt;

&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Human&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Monkey&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;attribute&quot;&gt;speak&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; [&lt;span class=&quot;string&quot;&gt;'yolo'&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;unless&lt;/span&gt; i % &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] + [&lt;span class=&quot;string&quot;&gt;'swag'&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;unless&lt;/span&gt; i % &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.100&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;javascript&quot;&gt;JavaScript&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getRandomNumber&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// chosen by fair dice roll.&lt;/span&gt;
              &lt;span class=&quot;comment&quot;&gt;// guaranteed to be random.&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
  </channel>
</rss>